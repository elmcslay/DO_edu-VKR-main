---
- name: build node state
  hosts: build
  become: yes

  tasks:
  - name: chesk package installation
    apt:
      pkg:
      - git
      - default-jdk
      - maven
      - docker.io
      state: present
      update_cache: true
  
  - name: clone project repo
    git:
      repo: https://github.com/elmcslay/DO_edu-VKR-prjct.git
      dest: /tmp/vkr_project
      clone: yes

  - name: check artifact is exists
    stat:
      path: /tmp/vkr_project/target/hello-1.0.war
    register: result

  - name: create artifact, if it does not exist
    shell: mvn package
    args:
      chdir: /tmp/vkr_project
    when: not result.stat.exists 

  # - name: login to dockerhub
  #   community.docker.docker_login:
  #     username: elmcslay
  #     password: " {{ lookup('dr_pass', '~/scrts_prjct') }}"

  - name: copy dockerhub secrets (kostyl)
    copy:
      src: ~/scrts_prjct/dr_pass.txt
      dest: /tmp/vkr_project

  - name: login on docker registry
    shell: cat dr_pass.txt | docker login --username elmcslay --password-stdin
    args:
      chdir: /tmp/vkr_project

  - name: build and push docker image
    community.docker.docker_image:
      build: 
        path: target/
        dockerfile: Dockerfile
      name: vkr-img
      tag: 2.0
      push: true
      sourse: build


  # - name: copy dockerhub secrets (kostyl)
  #   copy:
  #     src: ~/scrts_prjct/dr_pass.txt
  #     dest: /tmp/vkr_project  

  # - name: login on docker registry
  #   shell: cat dr_pass.txt | docker login --username elmcslay --password-stdin
  #   args:
  #     chdir: /tmp/vkr_project


- name: prod node state
  hosts: prod
  become: yes

  tasks:
  - name: check docker package
    apt:
      name: docker.io
      state: present

  - name: pull and run docker image
    community.docker.docker_container:
      name: vkr-cont
      image: elmcslay/vkr-img:2.0
      ports:
      - "8080:8080"
