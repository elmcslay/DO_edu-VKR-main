---
- name: build node state
  hosts: build
  become: yes

  tasks:
  - name: check package installation
    apt:
      pkg:
      - git
      - default-jdk
      - maven
      - docker.io
      - python3-pip
      state: present
      update_cache: true
  
  - name: install docker python package
    pip:
      name: docker

  - name: clone project repo
    git:
      repo: https://github.com/elmcslay/DO_edu-VKR-prjct.git
      dest: /tmp/vkr_project
      clone: yes

  - name: check artifact is exists
    stat:
      path: /tmp/vkr_project/target/hello-1.0.war
    register: result

  - name: create artifact, if it does not exist
    shell: mvn package
    args:
      chdir: /tmp/vkr_project
    when: not result.stat.exists 

  - name: copy dockerhub secrets (kostyl)
    copy:
      src: ~/scrts_prjct/dr_pass
      dest: /tmp/vkr_project

  - name: login to dockerhub
    community.docker.docker_login:
      username: elmcslay
      password: " {{ lookup('file', '/tmp/vkr_project/dr_pass') }}"

  # - name: login on docker registry
  #   shell: cat dr_pass | docker login --username elmcslay --password-stdin
  #   args:
  #     chdir: /tmp/vkr_project

  - name: build and push docker image
    community.docker.docker_image:
      build: 
        path: /tmp/vkr_project
      name: vkr-img
      repository: elmcslay/vkr-img
      tag: 2.0
      push: true
      source: build


- name: prod node state
  hosts: prod
  become: yes

  tasks:
  - name: check package installation
    apt:
      pkg:
      - docker.io
      - python3-pip
      state: present
      update_cache: true

  - name: install docker python package
    pip:
      name: docker

  - name: pull and run docker image
    community.docker.docker_container:
      name: vkr-cont
      image: elmcslay/vkr-img:2.0
      ports:
      - "8080:8080"
